{"version":3,"sources":["components/Map.js","components/Header.js","components/Podcast.js","components/TravelType.js","components/PodcastDisplay.js","components/AudioPlayer.js","App.js","serviceWorker.js","index.js"],"names":["Map","getAddressFromApi","query","axios","url","method","responseType","params","key","format","limit","collection","countryCode","q","handleUlClick","event","handleClickOutside","target","parentNode","classList","contains","localName","text","innerText","setState","userInputFrom","htmlFrom","userInputTo","htmlTo","handleUserInput","value","length","then","result","dynamicHtml","data","results","forEach","address","displayString","setULRef","bind","state","podcastInput","document","addEventListener","this","removeEventListener","node","ULRef","className","action","autoComplete","htmlFor","type","name","placeholder","onKeyUp","onChange","onClick","ref","ReactHtmlParser","props","submitForm","Component","Header","Podcast","handleChange","id","TravelType","handleClick","persist","parentElement","travelType","chooseTravelType","class","icon","walkTime","cycleTime","PodcastDisplay","audio","Audio","showMore","showAll","showLess","playAudio","console","log","isAudioPlaying","src","play","pauseAudio","pause","podcastList","map","podcast","thumbnail","alt","getAudioItem","faHeadphones","title_original","Readmore","charLimit","readMoreText","readLessText","description_original","Math","floor","audio_length_sec","AudioPlayer","goToMusic","window","scrollTo","body","scrollHeight","setAudio","newAudio","audioToPlay","toggleButton","progress","audioFile","timeLeft","getFormattedTime","currentTime","setTimeout","showAlert","Swal","fire","title","confirmButtonText","padding","duration","togglePlay","scrubAudio","scrubTime","nativeEvent","offsetX","progressBar","current","offsetWidth","hour","mins","seconds","handleProgress","percent","React","createRef","mouseDown","prevProps","prevState","ontimeupdate","selectedAudio","onMouseDown","onMouseUp","onMouseMove","style","flexBasis","library","add","fab","faWalking","faBiking","App","handleAddressSubmit","fromInput","toInput","preventDefault","start","end","size","routeColor","routeWidth","staticMapUrl","request","responseURL","from","to","routeType","unit","undefined","route","formattedTime","time","formatedWalkTime","showInvalidAdressModal","formatedCycleTime","handlePodcastSubmit","travelTime","minLength","maxLength","headers","dataResponse","language","len_min","len_max","handleChoice","getAudio","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e593d8f7.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport ReactHtmlParser from 'react-html-parser';\n\n\nclass Map extends Component{\n    constructor(){\n        super();\n\n        this.setULRef = this.setULRef.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n\n        this.state = {\n            userInputFrom:'',\n            userInputTo:'',\n            htmlFrom:'',\n            htmlTo:'',\n            podcastInput: \"\"\n        }\n    }\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    // set reference of UL node\n    setULRef(node) {\n        this.ULRef = node;\n    }\n\n    // if clicked on outside of li then address disappear\n    handleClickOutside(event) {\n        if (this.ULRef && !this.ULRef.contains(event.target)) {\n            this.setState({\n                htmlFrom:'',\n                htmlTo: ''\n            })\n        }\n    }\n\n    getAddressFromApi = (query)=>{\n        return axios({\n            url:'https://www.mapquestapi.com/search/v3/prediction',\n            method: 'GET',\n            responseType: 'jsonp',\n            params: {\n                key:'ozwRV4KrZgLGMjKBYbnTIZBWQAN4JZBn',\n                format: 'png',\n                limit:'5',\n                collection:'adminArea,address,category,franchise,airport,poi',\n                countryCode:'CA',\n                q:query,\n            }\n        })\n    }\n\n    handleUlClick = (event)=>{\n        this.handleClickOutside(event);\n        if (event.target.parentNode.classList.contains('from-address')){\n            if(event.target.localName === 'li'){\n                const text = event.target.innerText;\n                if(text !== 'Address'){\n                    this.setState({\n                        userInputFrom:text,\n                        htmlFrom:``\n                    })\n                }\n            }\n        }\n        if (event.target.parentNode.classList.contains('to-address')){\n            if(event.target.localName === 'li'){\n                const text = event.target.innerText;\n                if(text !== 'Address'){\n                    this.setState({\n                        userInputTo:text,\n                        htmlTo:``\n                    })\n                }\n            }\n        }\n        \n    }\n    handleUserInput = (event) => {\n        if(event.target.classList.contains('from-input')){\n            if (event.target.value) {\n                this.setState({\n                    userInputFrom: event.target.value,\n                })\n                if((event.target.value).length > 1)\n                this.getAddressFromApi(event.target.value)\n                .then((result)=>{\n                    let dynamicHtml = '';\n                    if (result && result.data.results) {\n                        result.data.results.forEach((address) => {\n                            dynamicHtml = dynamicHtml + `<li>${address.displayString}</li>`;\n                        })\n                    }\n                    this.setState({\n                        htmlFrom: dynamicHtml ? dynamicHtml : ''\n                    })\n                })\n            } else {\n                this.setState({\n                    userInputFrom:'',\n                    htmlFrom: ``\n                })\n            }\n        }\n\n        if (event.target.classList.contains('to-input')){\n            if (event.target.value) {\n                this.setState({\n                    userInputTo: event.target.value,\n                })\n                if ((event.target.value).length > 1)\n                    this.getAddressFromApi(event.target.value)\n                        .then((result) => {\n                            let dynamicHtml = '';\n                            if (result && result.data.results) {\n                                result.data.results.forEach((address) => {\n                                    dynamicHtml = dynamicHtml + `<li>${address.displayString}</li>`;\n                                })\n                            }\n                            this.setState({\n                                htmlTo: dynamicHtml ? dynamicHtml : ''\n                            })\n                        })\n            } else {\n                this.setState({\n                    userInputTo: '',\n                    htmlTo: ''\n                })\n            }\n        }\n        // this.checkEmptyUserInput();\n\n    }\n\n    // checkEmptyUserInput = (event) => {\n    //     if (event.target.value === \"\") {\n    //         console.log(event.target.value)\n    //         alert('please type an address')\n    //     }\n    // }\n\n\n    render(){\n        return(\n            <section className=\"whereTo\">\n                <h2>Where To Go?</h2>\n                <form action=\"submit\" className=\"search-form wrapper\" autoComplete=\"off\">\n                    <div className=\"addressSearchInput\">\n                        <label htmlFor=\"fromaddress\">Starting Location</label>\n                        <input\n                            type=\"text\"\n                            name=\"fromaddress\"\n                            className=\"address-search from-input\"\n                            placeholder=\"1 Canada's Wonderland Drive, Vaughan, ON L6A 1S6\"\n                            value={this.state.userInputFrom}\n                            onKeyUp={this.handleUserInput}\n                            onChange={this.handleUserInput}\n                        />\n                        {\n                        this.state.htmlFrom\n                        ?   <ul\n                                className=\"suggestions from-address\"\n                                onClick={this.handleUlClick}\n                                ref={this.setULRef}\n                            >\n                                {ReactHtmlParser(this.state.htmlFrom)}\n                            </ul>\n                        :   ''\n                        }\n                    </div>\n                    <div className=\"addressSearchInput\">\n                        <label htmlFor=\"toaddress\">Destination</label>\n                        <input\n                            type=\"text\"\n                            name=\"toaddress\"\n                            className=\"address-search to-input\"\n                            placeholder=\"288 Bremner Blvd, Toronto, ON M5V 3L9\"\n                            value={this.state.userInputTo}\n                            onKeyUp={this.handleUserInput}\n                            onChange={this.handleUserInput}\n                        />\n                        {this.state.htmlTo \n                         ?   <ul\n                                className=\"suggestions to-address\"\n                                onClick={this.handleUlClick}\n                                ref={this.setULRef}\n                            >\n                                {ReactHtmlParser(this.state.htmlTo)}\n                            </ul>\n                        : ''\n                        }   \n                    </div>\n                    <button\n                        type=\"submit\"\n                        onClick={(event) => { this.props.submitForm(event, this.state.userInputFrom, this.state.userInputTo) }}\n                    >\n                        Search\n                </button>\n                </form>\n            </section>\n        )\n    }\n}\n\nexport default Map;","import React, { Component } from 'react';\n\nclass Header extends Component {\n    render() {\n        return (\n          <header>\n            <section className=\"hero\">\n              <div className=\"whiteBlock\">\n                <h1>Podcast Prioritizer</h1>\n                <div className=\"heroTextContainer\">\n                  <p className=\"heroTextTagline\">\n                    Say goodbye to dull and boring commutes!\n                  </p>\n                  <p className=\"heroText\">\n                    Podcast Prioritizer will fill your long and uneventful\n                    commutes with informative and juicy podcasts for your\n                    listening pleasure. Simply enter your starting location,\n                    desired destination and topic of interest and we will suggest\n                    a lists of podcasts based on the length of your journey.\n                  </p>\n                </div>\n              </div>\n            </section>\n          </header>\n        );\n    }\n}\n\nexport default Header;","import React, { Component } from \"react\";\n\n\nclass Podcast extends Component {\n  constructor() {\n    super();\n    this.state = {\n        podcastInput: \"\"\n    }\n  }\n  handleChange=(event)=>{\n    this.setState({\n      podcastInput:event.target.value\n    })\n    \n\n  }\n  render() {\n      // user podcast selection form\n      return(\n        <section className=\"whatToListen\">\n        <form className=\"search-form podcastSearchForm wrapper\">\n          <h2 className=\"podcastSearchHeader\">What to Listen to?</h2>\n          <div className=\"podcastSearchInput\"> \n            <label htmlFor=\"podcast\"></label>\n            <input placeholder=\"Your topic of interest (e.g. finance, pets, health)\" className=\"podcast-search\" type=\"text\" id=\"podcast\" value={this.state.podcastInput} onChange={this.handleChange}/>\n            <button type=\"submit\" onClick={(event)=>{this.props.submitForm(event, this.state.podcastInput)}}>Search</button>\n          </div>\n        </form>\n        </section>\n      )\n  }\n}\n\nexport default Podcast;\n","import React, { Component } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nclass TravelType extends Component{\n    constructor(){\n        super()\n        this.state={\n            travelType:\"\"\n        }\n    }\n     handleClick=(event)=>{\n        event.persist()\n        const id=event.target.id || event.target.parentElement.id || event.target.parentElement.parentElement.id\n        this.setState({\n            travelType:id\n        })\n        this.props.chooseTravelType(id)\n    }\n    render(){\n    return (\n      <section className=\"travelTypeSection\">\n        <div className=\"travelTypeSelection wrapper\">\n          <h2 className=\"travelHeading\">Travel Preference?</h2>\n          <p class=\"safetyWarning\">\n            <span className=\"warning\">Warning:</span> Biking with headphones on\n            is <span className=\"emphasisText\">not</span> suggested.\n          </p>\n          <p class=\"safetyWarning\">\n            Please be safe when listening to audio while cycling.\n          </p>\n          <div className=\"travelTypeButtonContainer\">\n            <button id=\"walk\" onClick={this.handleClick} className={this.state.travelType===\"walk\" ? \"active\" : \"inactive\" }>\n              <FontAwesomeIcon\n                icon=\"walking\"\n                className=\"icon\"\n              ></FontAwesomeIcon>\n              <p>{`your walking travel time is ${this.props.walkTime} hour(s)`}</p>\n            </button>\n            <button id=\"cycle\" onClick={this.handleClick} className={this.state.travelType===\"cycle\" ? \"active\" : \"inactive\"}>\n              <FontAwesomeIcon icon=\"biking\" className=\"icon\"></FontAwesomeIcon>\n              <p>{`your cycling travel time is ${this.props.cycleTime} hour(s)`}</p>\n            </button>\n          </div>\n        </div>\n      </section>\n    )}\n}\nexport default TravelType","import React, { Component } from \"react\";\nimport ReadMoreAndLess from \"react-read-more-less\";\nimport { faHeadphones } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass PodcastDisplay extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isAudioPlaying: false,\n    };\n  }\n\n  // thank you Salvatore @ stackoverflow.com (https://stackoverflow.com/questions/39779527/toggle-play-pause-in-react-with-audio)\n\n  audio = new Audio();\n\n  showMore = () => this.setState({ showAll: true });\n  showLess = () => this.setState({ showAll: false });\n\n  playAudio = (audio) => {\n    console.log(typeof audio);\n    console.log(\"play\");\n    this.setState({\n      isAudioPlaying: true,\n    });\n    this.audio.src = audio;\n    this.audio.play();\n  };\n\n  pauseAudio = () => {\n    console.log(\"pause\");\n    this.setState({\n      isAudioPlaying: false,\n    });\n    this.audio.pause();\n  };\n\n  render() {\n    // console.log(this.props.podcastList);\n    return (\n      <section className=\"podcastContainer\">\n        <h2 className=\"podcastHeader\">Pick Your Podcast</h2>\n        <ul className=\"podcastGrid wrapper\">\n          {this.props.podcastList.map((podcast) => {\n            return (\n              <li className=\"podcastList\" key={podcast.id}>\n                <div className=\"podcastImgContainer\">\n                  <img\n                    onClick={\n                      this.state.isAudioPlaying\n                        ? this.pauseAudio\n                        : () => {\n                            this.playAudio(podcast.audio);\n                          }\n                    }\n                    src={podcast.thumbnail}\n                    alt=\"\"\n                    className=\"podcastImg\"\n                  />\n                  <button className=\"audioButton\" \n                  onClick={()=>this.props.getAudioItem(podcast)}>\n                    <FontAwesomeIcon icon={faHeadphones} />\n                    &nbsp;Listen\n                  </button>\n                </div>\n                <div className=\"podcastInfo\">\n                  <h3>{podcast.title_original}</h3>\n                  <ReadMoreAndLess\n                    ref={this.Readmore}\n                    charLimit={200}\n                    readMoreText=\"Read More\"\n                    readLessText=\"&nbsp;Read Less\"\n                  >\n                    {podcast.description_original}\n                  </ReadMoreAndLess>\n                  <p className=\"podcastLength\">\n                    Length: {Math.floor(podcast.audio_length_sec / 60)} minutes\n                  </p>\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      </section>\n    );\n  }\n}\n\nexport default PodcastDisplay;\n","import React, { Component } from 'react';\nimport Swal from 'sweetalert2';\nclass AudioPlayer extends Component {\n\n    constructor() {\n        super();\n        this.progressBar = React.createRef();\n        this.state = {\n            isAudioPlaying: false,\n            toggleButton: '▶️',\n            progress: '',\n            timeLeft: '00:00',\n            mouseDown: false,\n            audioFile: '',\n        };\n    }\n\n\n    // thank you Salvatore @ stackoverflow.com (https://stackoverflow.com/questions/39779527/toggle-play-pause-in-react-with-audio)\n    audio = new Audio();\n\n    // here first check if there is any difference in state and props received\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.audioToPlay.audio !== prevState.audioFile) {\n            this.setAudio();\n        }\n    }\n\n    componentDidMount() {\n        this.setState({\n            isAudioPlaying: false,\n            toggleButton: '▶️'\n        })\n        this.audio.src = this.props.audioToPlay.audio;\n        this.audio.ontimeupdate = this.handleProgress;\n        setTimeout(this.playAudio, 1000);\n        this.goToMusic();\n    }\n    goToMusic = ()=>{\n        window.scrollTo(0, document.body.scrollHeight);\n    }\n    setAudio = () => {\n        const newAudio = this.props.audioToPlay;\n        this.setState({\n            isAudioPlaying: false,\n            toggleButton: '▶️',\n            progress: '0',\n            audioFile: newAudio.audio,\n            timeLeft: this.getFormattedTime(newAudio.audio_length_sec)\n        })\n        this.audio.src = newAudio.audio;\n        this.audio.currentTime = 0;\n        setTimeout(this.playAudio,1000);\n        this.goToMusic();\n    }\n    showAlert = ()=>{\n        Swal.fire({\n            title: \"Sorry About That!\",\n            text: \"This audio is not available at the moment. Please try again audio to play!\",\n            confirmButtonText: \"OK\",\n            padding: \"2rem\",\n        });\n    }\n    playAudio = () => {\n    //     this.audio.onloadedmetadata = (event)=>{\n    //         if (!event.currentTarget.duration){\n    //             this.showAlert();     \n    //         }\n            if(!this.audio.duration){\n                this.showAlert();\n            }\n            else{\n                this.setState({\n                    isAudioPlaying: true,\n                    toggleButton: '❚ ❚',\n                });\n                this.audio.play();\n            }\n        \n    };\n\n    pauseAudio = () => {\n        this.setState({\n            isAudioPlaying: false,\n            toggleButton: '▶️'\n        });\n        this.audio.pause();\n    };\n    togglePlay = () => {\n        if (this.state.isAudioPlaying) { this.pauseAudio() }\n        else { this.playAudio(); }\n    }\n    scrubAudio = (event) => {\n        event.persist();\n        const scrubTime = (event.nativeEvent.offsetX / this.progressBar.current.offsetWidth) * this.audio.duration;\n        this.audio.currentTime = scrubTime;\n    }\n    getFormattedTime = (timeLeft) => {\n        const hour = Math.floor(timeLeft / (60 * 60))\n        let mins = Math.floor(timeLeft / 60) % 60;\n        let seconds = timeLeft % 60;\n        mins = mins < 10 && mins >= 0 ? '0' + mins : mins;\n        seconds = seconds < 10 && seconds >= 0 ? '0' + seconds : seconds;\n        timeLeft = hour ? `${hour}:${mins}:${seconds}` : `${mins}:${seconds}`;\n        return timeLeft;\n    }\n    handleProgress = () => {\n        const percent = (this.audio.currentTime / this.audio.duration) * 100;\n        let timeLeft = Math.floor(this.audio.duration - this.audio.currentTime);\n        timeLeft = this.getFormattedTime(timeLeft);\n        if (percent) {\n            this.setState({\n                timeLeft: timeLeft,\n                progress: `${percent}`\n            })\n        }\n    }\n    render() {\n        const selectedAudio = this.props.audioToPlay;\n        return (\n            <div className=\"wrapper audioWrapper\">\n                <h2 className=\"audioHeader\">Your Music Here</h2>\n                <div className=\"playerThumbnail\">\n                    <img \n                    src={selectedAudio.thumbnail} \n                    alt={selectedAudio.title} />\n                </div>\n                <div className=\"audioControl\">\n                    <button\n                        className=\"playerButton toggle\" title=\"Toggle Play\"\n                        onClick={() => this.togglePlay()}>{this.state.toggleButton}\n                    </button>\n                    <div className=\"progress\"\n                        ref={this.progressBar}\n                        onMouseDown={() => this.setState({ mouseDown: true })}\n                        onMouseUp={() => this.setState({ mouseDown: false })}\n                        onMouseMove={(event) => this.state.mouseDown && this.scrubAudio(event)}\n                    >\n                        <div className=\"progressFilled\" style={{ flexBasis: `${this.state.progress}%` }}></div>\n                    </div>\n                    <p className=\"timeLeft\">{this.state.timeLeft}</p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AudioPlayer;","import React, { Component } from \"react\";\nimport \"./App.scss\";\nimport axios from \"axios\";\nimport Map from \"./components/Map\";\nimport Header from \"./components/Header\";\nimport Podcast from \"./components/Podcast\";\nimport TravelType from \"./components/TravelType\";\nimport PodcastDisplay from \"./components/PodcastDisplay\";\nimport AudioPlayer from \"./components/AudioPlayer\";\nimport Swal from \"sweetalert2\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { faWalking, faBiking } from \"@fortawesome/free-solid-svg-icons\";\nlibrary.add(fab, faWalking, faBiking);\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      staticMapUrl: \"\",\n      formatedWalkTime: \"\",\n      formatedCycleTime: \"\",\n      walkTime: \"\",\n      cycleTime: \"\",\n      podcastList: [],\n      travelType: \"\",\n      audio: \"\",\n    };\n  }\n\n  handleAddressSubmit = (event, fromInput, toInput) => {\n    // getting travel time and static map from map quest API\n    event.preventDefault();\n    if (fromInput !== \"\" && toInput !== \"\") {\n      axios({\n        url: \"https://www.mapquestapi.com/staticmap/v5/map\",\n        method: \"GET\",\n        responseType: \"json\",\n        params: {\n          key: \"ozwRV4KrZgLGMjKBYbnTIZBWQAN4JZBn\",\n          start: fromInput,\n          end: toInput,\n          // start:\"312 horsham ave, northyork, ontario\",\n          // end:\"9205 yonge st, richmonhill, ontario\",\n          size: \"400,400\",\n          countryCode: \"CA\",\n          routeColor: \"F97068\",\n          routeWidth: 5,\n        },\n      }).then((result) => {\n        this.setState({\n          staticMapUrl: result.request.responseURL,\n        });\n      });\n    }\n\n    // getting pedestrian travel time\n    if (fromInput !== \"\" && toInput !== \"\") {\n      axios({\n        method: \"GET\",\n        url: \"http://www.mapquestapi.com/directions/v2/route\",\n        params: {\n          key: \"TpZYQMsUgBgXUKt2b3xmQCxKpHB7JWoS\",\n          from: fromInput,\n          to: toInput,\n          // from:\"312 horsham ave, northyork, ontario\",\n          // to:\"9205 yonge st, richmonhill, ontario\",\n          routeType: \"pedestrian\",\n          unit: \"k\",\n        },\n      }).then((result) => {\n        //  console.log(result.data.route)\n        if (\n          result.data.route.formattedTime !== undefined &&\n          result.data.route.time !== undefined &&\n          result.data.route.formattedTime !== \"00:00:00\" &&\n          result.data.route.time !== \"00:00:00\"\n        ) {\n          this.setState({\n            formatedWalkTime: result.data.route.formattedTime,\n            walkTime: result.data.route.time,\n          });\n        } else {\n          this.showInvalidAdressModal();\n        }\n      });\n    }\n\n    // getting cycling travel time\n    axios({\n      method: \"GET\",\n      url: \"http://www.mapquestapi.com/directions/v2/route\",\n      params: {\n        key: \"TpZYQMsUgBgXUKt2b3xmQCxKpHB7JWoS\",\n        from: fromInput,\n        to: toInput,\n        // from:\"312 horsham ave, northyork, ontario\",\n        // to:\"9205 yonge st, richmonhill, ontario\",\n        routeType: \"bicycle\",\n        unit: \"k\",\n      },\n    }).then((result) => {\n      // console.log(result.data.route);\n      if (\n        result.data.route.formattedTime !== undefined &&\n        result.data.route.time !== undefined &&\n        result.data.route.formattedTime !== \"00:00:00\" &&\n        result.data.route.time !== \"00:00:00\"\n      ) {\n        this.setState({\n          formatedCycleTime: result.data.route.formattedTime,\n          cycleTime: result.data.route.time,\n        });\n      } else {\n        this.showInvalidAdressModal();\n      }\n    });\n  };\n\n  showInvalidAdressModal = () => {\n    Swal.fire({\n      title: \"Uh-oh!\",\n      text: \"You must enter in a valid starting and destination address if you wish to proceed.\",\n      confirmButtonText: \"OK\",\n      padding: \"2rem\",\n    });\n  };\n\n  handlePodcastSubmit = (event, podcastInput) => {\n    event.preventDefault();\n    let travelTime = 0;\n    if (this.state.travelType === \"walk\") {\n      travelTime = Math.floor(this.state.walkTime / 60);\n      console.log(this.state.walkTime);\n    } else if (this.state.travelType === \"cycle\") {\n      travelTime = Math.floor(this.state.cycleTime / 60);\n      console.log(this.state.cycleTime);\n    }\n\n    const minLength = travelTime - 5;\n    const maxLength = travelTime + 5;\n\n    axios({\n      url: \"https://listen-api.listennotes.com/api/v2/search\",\n      method: \"GET\",\n      headers: { \"X-ListenAPI-Key\": \"0be4947c18024c2d8a5bb0dcb11eb2ac\" },\n      dataResponse: \"jsonp\",\n      params: {\n        q: `\"${podcastInput}\"`,\n        type: \"episode\",\n        language: \"English\",\n        len_min: minLength,\n        len_max: maxLength,\n      },\n    }).then((result) => {\n      this.setState({\n        podcastList: result.data.results,\n      });\n\n      if (this.state.podcastList.length === 0) {\n        Swal.fire({\n          title: \"Uh-oh!\",\n          text: \"Sorry, there are no podcasts that match your search criteria. Please choose another topic!\",\n          confirmButtonText: \"OK\",\n          padding: \"2rem\",\n        });\n      }\n    });\n  };\n\n  handleChoice = (id) => {\n    this.setState({\n      travelType: id,\n    });\n  };\n\n  getAudio = (selectedAudio) => {\n    this.setState({\n      audio: selectedAudio,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Map submitForm={this.handleAddressSubmit} />\n        {this.state.formatedWalkTime !== \"\" ? (\n          <TravelType\n            walkTime={this.state.formatedWalkTime}\n            cycleTime={this.state.formatedCycleTime}\n            chooseTravelType={this.handleChoice}\n          ></TravelType>\n        ) : (\n          <section></section>\n        )}\n        <Podcast submitForm={this.handlePodcastSubmit} />\n        <section className=\"route-map\">\n          <img src={this.state.staticMapUrl} alt=\"Route on map\" />\n        </section>\n        <section>\n          <PodcastDisplay\n            podcastList={this.state.podcastList}\n            getAudioItem={this.getAudio}\n          />\n        </section>\n        <section className=\"audioPlayer\">\n          {this.state.audio ? (\n            <AudioPlayer audioToPlay={this.state.audio} />\n          ) : (\n            \"\"\n          )}\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}